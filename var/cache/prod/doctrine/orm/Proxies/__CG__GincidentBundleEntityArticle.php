<?php

namespace Proxies\__CG__\GincidentBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Article extends \GincidentBundle\Entity\Article implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
  'niveau' => NULL,
  'idclient' => NULL,
  'famille' => NULL,
  'sousfamille' => NULL,
  'brochureFile' => NULL,
  'Fich_Tic' => NULL,
  'decor' => NULL,
  'plaque' => NULL,
  'ref' => NULL,
  'codefacture' => NULL,
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
  'niveau' => NULL,
  'idclient' => NULL,
  'famille' => NULL,
  'sousfamille' => NULL,
  'brochureFile' => NULL,
  'Fich_Tic' => NULL,
  'decor' => NULL,
  'plaque' => NULL,
  'ref' => NULL,
  'codefacture' => NULL,
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {
        unset($this->niveau, $this->idclient, $this->famille, $this->sousfamille, $this->brochureFile, $this->Fich_Tic, $this->decor, $this->plaque, $this->ref, $this->codefacture);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);
            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);

    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'id', 'art_frs', 'niveau', 'idclient', 'famille', 'sousfamille', 'brochureFile', 'Fich_Tic', 'decor', 'plaque', 'ref', 'codefacture', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'prxuni', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'dim', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'totalprix', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'qte'];
        }

        return ['__isInitialized__', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'id', 'art_frs', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'prxuni', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'dim', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'totalprix', '' . "\0" . 'GincidentBundle\\Entity\\Article' . "\0" . 'qte'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Article $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->niveau, $this->idclient, $this->famille, $this->sousfamille, $this->brochureFile, $this->Fich_Tic, $this->decor, $this->plaque, $this->ref, $this->codefacture);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getBrochureFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrochureFile', []);

        return parent::getBrochureFile();
    }

    /**
     * {@inheritDoc}
     */
    public function getCodeFacture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodeFacture', []);

        return parent::getCodeFacture();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodeFacture($fact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodeFacture', [$fact]);

        return parent::setCodeFacture($fact);
    }

    /**
     * {@inheritDoc}
     */
    public function getQte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQte', []);

        return parent::getQte();
    }

    /**
     * {@inheritDoc}
     */
    public function setQte($qt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQte', [$qt]);

        return parent::setQte($qt);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrxuni()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrxuni', []);

        return parent::getPrxuni();
    }

    /**
     * {@inheritDoc}
     */
    public function getDim()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDim', []);

        return parent::getDim();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalprix()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalprix', []);

        return parent::getTotalprix();
    }

    /**
     * {@inheritDoc}
     */
    public function setDim($di)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDim', [$di]);

        return parent::setDim($di);
    }

    /**
     * {@inheritDoc}
     */
    public function setPrxuni($pr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrxuni', [$pr]);

        return parent::setPrxuni($pr);
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalprix($tp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalprix', [$tp]);

        return parent::setTotalprix($tp);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFamille($fam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFamille', [$fam]);

        return parent::setFamille($fam);
    }

    /**
     * {@inheritDoc}
     */
    public function setIdclient($idc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdclient', [$idc]);

        return parent::setIdclient($idc);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdclient()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdclient', []);

        return parent::getIdclient();
    }

    /**
     * {@inheritDoc}
     */
    public function setSousFamille($fam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSousFamille', [$fam]);

        return parent::setSousFamille($fam);
    }

    /**
     * {@inheritDoc}
     */
    public function getFamille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamille', []);

        return parent::getFamille();
    }

    /**
     * {@inheritDoc}
     */
    public function getSousFamille()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSousFamille', []);

        return parent::getSousFamille();
    }

    /**
     * {@inheritDoc}
     */
    public function setArtFrs($artFrs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArtFrs', [$artFrs]);

        return parent::setArtFrs($artFrs);
    }

    /**
     * {@inheritDoc}
     */
    public function setRef($rf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRef', [$rf]);

        return parent::setRef($rf);
    }

    /**
     * {@inheritDoc}
     */
    public function setNiveau($niv)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNiveau', [$niv]);

        return parent::setNiveau($niv);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlaque($pl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlaque', [$pl]);

        return parent::setPlaque($pl);
    }

    /**
     * {@inheritDoc}
     */
    public function setDecor($decor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDecor', [$decor]);

        return parent::setDecor($decor);
    }

    /**
     * {@inheritDoc}
     */
    public function getRef()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRef', []);

        return parent::getRef();
    }

    /**
     * {@inheritDoc}
     */
    public function getDecor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDecor', []);

        return parent::getDecor();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlaque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlaque', []);

        return parent::getPlaque();
    }

    /**
     * {@inheritDoc}
     */
    public function getNiveau()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNiveau', []);

        return parent::getNiveau();
    }

    /**
     * {@inheritDoc}
     */
    public function getArtFrs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtFrs', []);

        return parent::getArtFrs();
    }

    /**
     * {@inheritDoc}
     */
    public function getFich_Tic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFich_Tic', []);

        return parent::getFich_Tic();
    }

    /**
     * {@inheritDoc}
     */
    public function setFich_Tic($brochureFilename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFich_Tic', [$brochureFilename]);

        return parent::setFich_Tic($brochureFilename);
    }

    /**
     * {@inheritDoc}
     */
    public function getFichTic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFichTic', []);

        return parent::getFichTic();
    }

    /**
     * {@inheritDoc}
     */
    public function setFichTic($brochureFilename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFichTic', [$brochureFilename]);

        return parent::setFichTic($brochureFilename);
    }

    /**
     * {@inheritDoc}
     */
    public function setBrochureFile($brochureFilename)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrochureFile', [$brochureFilename]);

        return parent::setBrochureFile($brochureFilename);
    }

}
